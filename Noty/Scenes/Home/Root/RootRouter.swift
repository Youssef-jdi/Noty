////
//  RootRouter.swift
//  Noty
//
//  Created by Youssef Jdidi on 8/3/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol RootRouterProtocol {
  func set(viewController: RootViewControllerProtocol?)
  func route(to scene: RootRouter.Scene)
}

class RootRouter: NSObject, RootRouterProtocol {

    //MARK: DI
    weak var viewController: RootViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let homeStoryboard: Storyboard

    func set(viewController: RootViewControllerProtocol?) {
        self.viewController = viewController
    }

    init(
        rootNavigator: RootNavigatorProtocol,
        homeStoryboard: Storyboard
    ) {
        self.rootNavigator = rootNavigator
        self.homeStoryboard = homeStoryboard
    }
}

// MARK: Routing logic
extension RootRouter {

    enum Scene {
        case settings
    }

    func route(to scene: RootRouter.Scene) {
        switch scene {
        case .settings:
            guard let vc = homeStoryboard.viewController(identifier: HomeStoryboardId.settings) as? SettingsViewController else { return assertionFailure() }
            viewController?.show(vc, sender: nil)
        }
    }
}
