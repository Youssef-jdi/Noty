//
//  NotysInteractor.swift
//  Noty
//
//  Created by Youssef Jdidi on 8/3/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol NotysInteractorProtocol {
    func fetchNotes()
    func deleteNote(note: NoteModel)
}

class NotysInteractor: NotysInteractorProtocol {

    // MARK: DI
    var presenter: NotysPresenterProtocol
    var noteService: NoteServiceProtocol
    var errorHandler: ErrorHandlerProtocol

    init(
        presenter: NotysPresenterProtocol,
        noteService: NoteServiceProtocol,
        errorHandler: ErrorHandlerProtocol
    ) {
        self.presenter = presenter
        self.noteService = noteService
        self.errorHandler = errorHandler
    }
}

extension NotysInteractor {
    func fetchNotes() {
        noteService.fetchNotes {[weak self] result in
            guard let self = self else { return }
            switch result {
            case .success(let notes):
                guard let noteEntities = notes as? [Note] else { return }
                let notesArray = noteEntities.compactMap { NoteModel.map(from: $0) }
                self.presenter.present(fetched: notesArray)
            case .failure(let error):
                self.errorHandler.handle(error)
            }
        }
    }

    func deleteNote(note: NoteModel) {
        noteService.deleteNote(note)
    }
}
