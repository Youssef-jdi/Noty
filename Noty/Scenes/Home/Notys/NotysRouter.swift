////
//  NotysRouter.swift
//  Noty
//
//  Created by Youssef Jdidi on 8/3/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol NotysRouterProtocol {
  func set(viewController: NotysViewControllerProtocol?)
  func route(to scene: NotysRouter.Scene)
}

class NotysRouter: NSObject, NotysRouterProtocol {

    //MARK: DI
    weak var viewController: NotysViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let homeStoryboard: Storyboard
    private let alertsStoryboard: Storyboard

    func set(viewController: NotysViewControllerProtocol?) {
        self.viewController = viewController
    }

    init(
        rootNavigator: RootNavigatorProtocol,
        homeStoryboard: Storyboard,
        alertsStoryboard: Storyboard
    ) {
        self.rootNavigator = rootNavigator
        self.homeStoryboard = homeStoryboard
        self.alertsStoryboard = alertsStoryboard
    }
}

// MARK: Routing logic
extension NotysRouter {

    enum Scene {
        case tuto
        case date(note: NoteModel, from: DidSaveReminderDelegate?)
    }

    func route(to scene: NotysRouter.Scene) {
        switch scene {
        case .tuto:
            guard let vc = homeStoryboard.viewController(identifier: HomeStoryboardId.tuto) as? TutorialViewController else { assertionFailure("Couldn't load vc"); return }
            vc.modalTransitionStyle = .crossDissolve
            vc.modalPresentationStyle = .overCurrentContext
            viewController?.present(vc, animated: true, completion: nil)
        case .date(let note, let delegate):
            guard let vc = alertsStoryboard.viewController(identifier: AlertsStoryboardId.date) as? DateAlertViewController else { assertionFailure(); return }
            vc.set(note: note)
            vc.set(delegate: delegate)
            viewController?.present(vc, animated: true, completion: nil)
        }
    }
}
