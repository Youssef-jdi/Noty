//
//  NotysPresenter.swift
//  Noty
//
//  Created by Youssef Jdidi on 8/3/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol NotysPresenterProtocol {
    func set(viewController: NotysViewControllerProtocol?)

    // add the functions that are called from interactor
    func handle(error: Error)
    func present(fetched notes: [NoteModel])
    func presentTutoIfNeeded()
    func presentIsFavorite(result: Result<Storable?, Error>, on note: NoteModel)
}

class NotysPresenter: NotysPresenterProtocol {

    // MARK: DI
    weak var viewController: NotysViewControllerProtocol?

    func set(viewController: NotysViewControllerProtocol?) {
        self.viewController = viewController
    }
}

// MARK: Methods
extension  NotysPresenter {

    func handle(error: Error) {
        viewController?.display(error: error)
    }

    func present(fetched notes: [NoteModel]) {
        viewController?.display(notes: notes)
    }

    func presentTutoIfNeeded() {
        viewController?.displayTutoIfNeeded()
    }

    func presentIsFavorite(result: Result<Storable?, Error>, on note: NoteModel) {
        viewController?.displayIsFavorite(result: result, on: note)
    }
}
