//
//  ConfirmInteractor.swift
//  Noty
//
//  Created by Youssef Jdidi on 15/2/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol ConfirmInteractorProtocol {
    func handeViewDidLoad(email: String)
    func handleEmailOpenApp()
}

class ConfirmInteractor: ConfirmInteractorProtocol {

    // MARK: DI
    var presenter: ConfirmPresenterProtocol

    init(presenter: ConfirmPresenterProtocol) {
        self.presenter = presenter
    }

    func handeViewDidLoad(email: String) {
        prepareConfirmText(email: email)
        prepareTryWithOtherMailText()
    }

    func handleEmailOpenApp() {
        let emailActionSheet = UIAlertController(title: "Open Email", message: nil, preferredStyle: .actionSheet)
        emailActionSheet.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: nil))
        if let action = openAction(withURL: "message://", andTitleActionTitle: "Mail") {
            emailActionSheet.addAction(action)
        }

        if let action = openAction(withURL: "googlegmail://", andTitleActionTitle: "Gmail") {
            emailActionSheet.addAction(action)
        }

        if let action = openAction(withURL: "readdle-spark://", andTitleActionTitle: "Spark") {
            emailActionSheet.addAction(action)
        }

        if let action = openAction(withURL: "ms-outlook://", andTitleActionTitle: "Outlook") {
            emailActionSheet.addAction(action)
        }
        presenter.present(actionSheet: emailActionSheet)
    }

    private func openAction(withURL: String, andTitleActionTitle: String) -> UIAlertAction? {
        guard let url = URL(string: withURL), UIApplication.shared.canOpenURL(url) else {
            return nil
        }
        let action = UIAlertAction(title: andTitleActionTitle, style: .default) { _ in
            UIApplication.shared.open(url, options: [:], completionHandler: nil)
        }
        return action
    }

    private func prepareConfirmText(email: String) {
        let text = "Noty has sent a confirmation email to \(email).\nPlease check your inbox and follow the instructions. Or click here to open you mail application"
        let textAttributes: [NSAttributedString.Key: Any] = [
            .font: UIFont.systemFont(ofSize: 20),
            .foregroundColor: UIColor.darkGray
        ]
        let attributedText = NSMutableAttributedString(string: text, attributes: textAttributes)
        let range = (text as NSString).range(of: "\(email).")
        let clickHereRange = (text as NSString).range(of: "click here")
        attributedText.addAttribute(NSAttributedString.Key.foregroundColor, value: R.color.vonoBlue()!, range: range)
        attributedText.addAttribute(NSAttributedString.Key.font, value: UIFont.systemFont(ofSize: 20, weight: .semibold), range: range)
        attributedText.addAttribute(NSAttributedString.Key.foregroundColor, value: R.color.vonoBlueDark()!, range: clickHereRange)
        attributedText.addAttribute(NSAttributedString.Key.font, value: UIFont.systemFont(ofSize: 20, weight: .semibold), range: clickHereRange)
        presenter.present(confirmText: attributedText)
    }

    private func prepareTryWithOtherMailText() {
        let attributedString = NSMutableAttributedString(string: "Did not receive the email? Check your spam folder or ")

        let url = NSURL(string: "try%20with%20another%20email")!
        let attributes: [NSAttributedString.Key: Any] = [
            .link: url,
            .underlineStyle: NSUnderlineStyle.single.rawValue,
            .underlineColor: R.color.vonoBlueDark()!,
            .foregroundColor: R.color.vonoBlueDark()!
        ]

        let urlString = NSAttributedString(
            string: "try with another email",
            attributes: attributes)
        attributedString.append(urlString)
        attributedString.addAttributes([.font: UIFont.systemFont(ofSize: 16)],
                                       range: (attributedString.string as NSString).range(of: attributedString.string))
        presenter.present(tryOtherMail: attributedString)
    }
}
