////
//  LoginRouter.swift
//  Noty
//
//  Created by Youssef Jdidi on 15/2/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol LoginRouterProtocol {
  func set(viewController: LoginViewControllerProtocol?)
  func route(to scene: LoginRouter.Scene)
}

class LoginRouter: NSObject, LoginRouterProtocol {

    //MARK: DI
    weak var viewController: LoginViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let onboardingStoryboard: Storyboard

    func set(viewController: LoginViewControllerProtocol?) {
        self.viewController = viewController
    }

    init(
        rootNavigator: RootNavigatorProtocol,
        onboardingStoryboard: Storyboard
    ) {
        self.rootNavigator = rootNavigator
        self.onboardingStoryboard = onboardingStoryboard
    }
}

// MARK: Routing logic
extension LoginRouter {

    enum Scene {
        case welcome
        case confirm(String)
    }

    func route(to scene: LoginRouter.Scene) {
        switch scene {
        case .welcome: viewController?.pop(animated: true)
        case .confirm(let email):
            guard let confirmVC = onboardingStoryboard.viewController(identifier: OnBoardingStoryboardId.confirm) as? ConfirmViewController else { return }
            confirmVC.set(email: email)
            viewController?.show(confirmVC, sender: nil)
        }
    }
}
