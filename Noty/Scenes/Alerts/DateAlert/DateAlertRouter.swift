////
//  DateAlertRouter.swift
//  Noty
//
//  Created by Youssef Jdidi on 20/3/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol DateAlertRouterProtocol {
  func set(viewController: DateAlertViewControllerProtocol?)
  func set(transition: AlertsTransition)
  func route(to scene: DateAlertRouter.Scene)
}

class DateAlertRouter: NSObject, DateAlertRouterProtocol {

    // MARK: DI
    weak var viewController: DateAlertViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let alertsStoryboard: Storyboard
    var transition: AlertsTransition?

    func set(viewController: DateAlertViewControllerProtocol?) {
        self.viewController = viewController
    }

    func set(transition: AlertsTransition) {
        self.transition = transition
    }

    init(
        rootNavigator: RootNavigatorProtocol,
        alertsStoryboard: Storyboard
    ) {
        self.rootNavigator = rootNavigator
        self.alertsStoryboard = alertsStoryboard
    }
}

// MARK: Routing logic
extension DateAlertRouter {

    enum Scene {
        case time(date: Date, note: NoteModel, from: DidSaveReminderDelegate?)
    }

    func route(to scene: DateAlertRouter.Scene) {
        switch scene {
        case .time(let date, let note, let delegate):
            guard let vc = alertsStoryboard.viewController(identifier: AlertsStoryboardId.time) as? TimeAlertViewController else { assertionFailure(); return }
            vc.modalPresentationStyle = .currentContext
            vc.transitioningDelegate = self
            vc.set(date: date)
            vc.set(note: note)
            vc.set(delegate: delegate)
            viewController?.present(vc, animated: true, completion: nil)
        }
    }
}

extension DateAlertRouter: UIViewControllerTransitioningDelegate {
    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {
        return transition
    }
}
