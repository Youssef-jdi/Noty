//
//  SplashScreenViewController.swift
//  Noty
//
//  Created by Youssef Jdidi on 11/2/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit
import Lottie

protocol SplashScreenViewControllerProtocol: class, UIViewControllerRouting {
    func set(interactor: SplashScreenInteractorProtocol)
    func set(router: SplashScreenRouterProtocol)

    // add the functions that are called from the presenter
    func display(error: Error)
    func display(isConnected: Bool)
}

class SplashScreenViewController: UIViewController, SplashScreenViewControllerProtocol {

    // MARK: DI
    var interactor: SplashScreenInteractorProtocol?
    var router: SplashScreenRouterProtocol?

    func set(interactor: SplashScreenInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: SplashScreenRouterProtocol) {
        self.router = router
    }

    // MARK: Outlet
    @IBOutlet weak var notyLabel: UILabel!

    // MARK: Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        handleAnimation()
    }

    private func handleAnimation() {
        let animationView = AnimationView(name: "SplashAnimation")
        animationView.frame = CGRect(x: 0, y: 0, width: 300, height: 300)
        animationView.center = self.view.center
        animationView.contentMode = .scaleAspectFill
        view.addSubview(animationView)
        UIView.animate(withDuration: TimeInterval(animationView.animationSpeed),
                       delay: 0,
                       options: [.curveEaseOut],
                       animations: {
            self.notyLabel.center.x += self.view.bounds.width
            self.view.layoutIfNeeded()
            }, completion: nil)
        animationView.play { [weak self] _ in
            guard let self = self else { return }
            self.interactor?.checkUser()
        }
    }
}

// MARK: Methods
extension SplashScreenViewController {

    func display(error: Error) {}

    func display(isConnected: Bool) {
        isConnected ? router?.route(to: .home) : router?.route(to: .onBoarding)
    }
}
